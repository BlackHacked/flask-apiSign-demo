一、起因

    为了实现基本的防抓取机制，对绝大多数采用了 Api 签名验证，在保证签名秘钥不泄露的前提下，具有一定的数据抓取防御能力。
    1. 请求参数是否被篡改；
    2. 请求来源是否合法；
    3. 请求是否具有唯一性。


二、经过

1. 前提准备
    接口提供方生成用户密钥，包含：
    1.1 accesskey_id, 标识用户
    1.2 accesskey_secret, 用户加密串

2. 公共参数
    2.1 accesskey_id, 标识用户
    2.2 version, 后端接口版本号
    2.3 timestamp, 10位时间戳(客户端生成时间戳可以适当减几秒)
    2.4 signature, uri请求参数签名(除signature外所有)
    # 另可以定义其他参数，比如signMethod

3. 签名过程
    3.1.对除签名外的所有请求参数按key做的升序排列。
        例如：有x=2,z=1,y=3, b=2, a=1三个参数，另加上公共参数后，按key排序后为："a", "access_key", "b", "timestamp", "version", "x", "y", "z"

    3.2 把"参数名=参数值&"形式连接，再加上accesskey_secret，得到拼装字符串。
        例如：a=1&access_key=test&b=2&timestamp=1510810729&version=v0.1&x=2&y=3&z=1&CAFGAUW7739t%$#&h1dG

    3.3 将上一步得到的字符串MD5加密并转化为大写。

4. 验证请求：
    4.1 验证版本
    4.2 验证时间戳是否有效(小于等于服务器时间戳且在30s之内请求有效)
    4.3 验证accesskey_id是否有效
    4.4 验证签名


三、结果

    1. demo: https://github.com/staugur/flask-apiSign-demo


四、参考

    1. API接口签名验证(详细描述主流签名方式)
    http://www.hello1010.com/api-sign

    2. Api：签名验证机制(提及关于POST签名说明)
    https://github.com/Eliacy/YYMiOS/wiki/Api%EF%BC%9A%E7%AD%BE%E5%90%8D%E9%AA%8C%E8%AF%81%E6%9C%BA%E5%88%B6